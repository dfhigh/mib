<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.mib.db.mybatis.mapper.VersionMapper">

    <resultMap id="versionResult" type="org.mib.db.model.Version">
        <id property="id" column="id" />
        <result property="projectId" column="project_id" />
        <result property="folderId" column="folder_id" />
        <result property="documentId" column="document_id" />
        <result property="version" column="version" />
        <result property="createdAt" column="created_at" />
        <result property="strProp1" column="prop1" />
        <result property="strProp2" column="prop2" />
        <result property="strProp3" column="prop3" />
        <result property="strProp4" column="prop4" />
        <result property="strProp5" column="prop5" />
        <result property="strProp6" column="prop6" />
        <result property="intProp7" column="prop7" />
        <result property="intProp8" column="prop8" />
        <result property="intProp9" column="prop9" />
        <result property="intProp10" column="prop10" />
        <result property="intProp11" column="prop11" />
        <result property="intProp12" column="prop12" />
        <result property="intProp13" column="prop13" />
        <result property="intProp14" column="prop14" />
    </resultMap>

    <select id="getVersion" resultMap="docResult">
        select * from version where id = #{id}
    </select>

    <select id="countOfVersions" resultType="java.lang.Long">
        select count(id) from version
        <where>
            <if test="params.params != null">
                <foreach collection="params.params" open=" and " separator=" and " item="item" index="index">
                    ${index} = #{item}
                </foreach>
            </if>
            <if test="params.name != null">and name like concat('%', #{params.name}, '%')</if>
        </where>
    </select>

    <select id="listVersions" resultMap="docResult">
        select * from version
        <where>
            <if test="params.params != null">
                <foreach collection="params.params" open=" and " separator=" and " item="item" index="index">
                    ${index} = #{item}
                </foreach>
            </if>
            <if test="params.name != null">and name like concat('%', #{params.name}, '%')</if>
        </where>
        <if test="params.orderBy != null and params.ordering != null">
            order by ${params.orderBy} ${params.ordering}
        </if>
        limit #{params.limit} offset #{params.offset}
    </select>

    <update id="updateVersion">
        update version
        <set>
            <if test="version.version != null">version=#{version.version},</if>
            <if test="version.strProp1 != null">prop1=#{version.strProp1},</if>
            <if test="version.strProp2 != null">prop2=#{version.strProp2},</if>
            <if test="version.strProp3 != null">prop3=#{version.strProp3},</if>
            <if test="version.strProp4 != null">prop4=#{version.strProp4},</if>
            <if test="version.strProp5 != null">prop5=#{version.strProp5},</if>
            <if test="version.strProp6 != null">prop6=#{version.strProp6},</if>
            <if test="version.intProp7 != null">prop7=#{version.intProp7},</if>
            <if test="version.intProp8 != null">prop8=#{version.intProp8},</if>
            <if test="version.intProp9 != null">prop9=#{version.intProp9},</if>
            <if test="version.intProp10 != null">prop7=#{version.intProp10},</if>
            <if test="version.intProp11 != null">prop8=#{version.intProp11},</if>
            <if test="version.intProp12 != null">prop9=#{version.intProp12},</if>
            <if test="version.intProp13 != null">prop7=#{version.intProp13},</if>
            <if test="version.intProp14 != null">prop8=#{version.intProp14},</if>
        </set>
        where id=#{version.id}
    </update>

    <delete id="deleteVersions">
        delete from version where id in
        <foreach collection="ids" open="(" close=")" separator="," item="item" index="index">
            #{item}
        </foreach>
    </delete>

</mapper>